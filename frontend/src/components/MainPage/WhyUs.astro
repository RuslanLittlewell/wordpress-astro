---
import Container from "@/layouts/Container.astro";
import { Image } from "astro:assets";
import MainTitle from "./features/MainTitle.astro";

export interface Points {
  title: string;
  description: string;
  image: string;
}

const { data } = Astro.props as {
  data: { title: string; points: Points[] };
};

const files = import.meta.glob('/src/assets/svg/*.svg', {
  eager: true,
  as: 'url',
});

const icons: Record<string, string> = {};
for (const [path, url] of Object.entries(files)) {
  const filename = path.split('/').pop()!;          
  const base = filename.replace(/\.svg$/i, '');     
  icons[filename] = url as string;
  icons[base] = url as string;
}

const getIconUrl = (name: string) => icons[name] ?? icons[`${name}.svg`] ?? '';
---

<section class="relative bg-zinc-50 py-8 sm:py-12 md:py-16 lg:py-20">
  <Container>
    <MainTitle title={data.title} />
    <ul class="grid gap-4 sm:gap-6 md:gap-8 lg:gap-12 sm:grid-cols-2 lg:grid-cols-3">
      {data.points.map(({ title, description, image }) => {
        const icon = getIconUrl(image);
        return (
          <li class="flex items-start gap-5">
            <div class="mt-1 shrink-0 rounded-2xl border bg-white p-3 text-zinc-700 shadow-sm">
              {icon ? (
                <Image
                  src={icon}
                  alt={title}
                  width="28"
                  height="28"
                  loading="lazy"
                  class="h-7 w-7 object-contain"
                />
              ) : (
                <div class="h-7 w-7 rounded bg-zinc-200" aria-hidden="true" />
              )}
            </div>

            <div>
              <h3 class="mb-2 text-lg font-semibold" set:text={title} />
              <p class="text-xs sm:text-sm md:text-md text-zinc-600" set:html={description} />
            </div>
          </li>
        );
      })}
    </ul>
  </Container>
</section>
